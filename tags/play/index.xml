<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Play on barakyo</title>
    <link>https://barakyo.github.io/tags/play/</link>
    <description>Recent content in Play on barakyo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 06 Apr 2014 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://barakyo.github.io/tags/play/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Play! Framework -- Parsing JSON</title>
      <link>https://barakyo.github.io/post/2014-04-06-play-framework-parsing-json/</link>
      <pubDate>Sun, 06 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://barakyo.github.io/post/2014-04-06-play-framework-parsing-json/</guid>
      <description>tl;dr I suggest using ObjectMapper found in the com.fasterxml.jackson.databind.ObjectMapper
ObjectMapper mapper = new ObjectMapper(); try { JsonNode root = request().body().asJson(); JsonNode jsonPhoneNumbers = root.get(&amp;#34;phoneNumbers&amp;#34;); for(JsonNode phoneNumberString : jsonPhoneNumbers) { String phoneNumber = phoneNumberString.asText(); } catch (NullPointerException npe) { // No valid phone numbers were provided  } Using ObjectMapper For parsing arrays in JSON requests, I suggest using the ObjectMapper. Assuming you have a request that looks like:
{ &amp;#34;phoneNumbers&amp;#34;: [ &amp;#34;555-555-5555&amp;#34;, &amp;#34;555-555-5556&amp;#34;, &amp;#34;555-555-5557&amp;#34; ] } We can easily access the phone number values by using ObjectMapper class.</description>
    </item>
    
    <item>
      <title>Play! Framework -- Returning JSON Responses</title>
      <link>https://barakyo.github.io/post/2014-04-06-play-framework-returning-json-response/</link>
      <pubDate>Sun, 06 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://barakyo.github.io/post/2014-04-06-play-framework-returning-json-response/</guid>
      <description>I&amp;rsquo;ve recently started a project at working using the Play Framework and while its a great framework, I was having a lot of trouble with some of the simplest tasks. I wouldn&amp;rsquo;t blame Play for my problems, returning to Java after a long hiatus, being spoiled by dynamicly typed languages, and lack of documentation really made such tasks like returning a JSON response difficult.
I figured that I may not be the only in this position, judging by the questions in the IRC channel and lack of responses, I figured it may be a good idea to jot down some of my notes, not only for myself, my coworkers, but for all my fellow Play framework noobs.</description>
    </item>
    
  </channel>
</rss>